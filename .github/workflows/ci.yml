name: 🔄 CI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  BUN_VERSION: '1.2.19'
  NODE_VERSION: '20'

jobs:
  test:
    name: 🧪 Test & Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        
      - name: ⚡ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 📦 Install dependencies
        run: |
          echo "📥 Installing dependencies..."
          bun install --frozen-lockfile
          echo "✅ Dependencies installed"
          
      - name: 🔨 Build package
        run: |
          echo "🔨 Building package..."
          bun run build
          echo "✅ Build completed"
          
      - name: 🧪 Run tests (if available)
        run: |
          if bun run test --help >/dev/null 2>&1; then
            echo "🧪 Running tests..."
            bun run test
          else
            echo "ℹ️ No test script found, skipping tests"
          fi
        continue-on-error: false
        
      - name: 📋 Validate package
        run: |
          echo "📋 Validating package..."
          bun run publish:dry
          echo "✅ Package validation passed"
          
      - name: 🏃 Quick benchmark (if available)
        run: |
          if [ -f "benchmark.js" ]; then
            echo "🏃 Running quick benchmark check..."
            timeout 60s bun run benchmark || echo "⚠️ Benchmark check timeout (non-critical)"
          else
            echo "ℹ️ No benchmark script found"
          fi
        continue-on-error: true

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        
      - name: ⚡ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
          
      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile
        
      - name: 🔍 Security audit
        run: |
          echo "🔍 Running security audit..."
          bun audit || echo "⚠️ Security audit found issues (check logs)"
        continue-on-error: true
        
      - name: 📊 Dependency check
        run: |
          echo "📊 Checking dependencies..."
          echo "Direct dependencies:"
          bun -p "Object.keys(require('./package.json').dependencies || {})"
          echo "Dev dependencies:"
          bun -p "Object.keys(require('./package.json').devDependencies || {})"

  compatibility:
    name: 🔄 Compatibility Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: ['1.2.19', 'latest']
        node-version: ['18', '20', '22']
      fail-fast: false
    
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        
      - name: ⚡ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile
        
      - name: 🔨 Build test
        run: |
          echo "🔨 Testing build with Bun ${{ matrix.bun-version }} + Node ${{ matrix.node-version }}..."
          bun run build
          echo "✅ Build successful"
          
      - name: 📋 Package validation
        run: |
          echo "📋 Testing package validation..."
          bun run publish:dry
          echo "✅ Package validation passed"

  performance:
    name: ⚡ Performance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        
      - name: ⚡ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
          
      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile
        
      - name: 🔨 Build package
        run: bun run build
        
      - name: 🏃 Performance benchmark
        run: |
          if [ -f "benchmark.js" ]; then
            echo "🏃 Running performance benchmark..."
            timeout 180s bun run benchmark || echo "⚠️ Benchmark timeout"
          else
            echo "ℹ️ No benchmark script found"
          fi
        continue-on-error: true
        
      - name: 📊 Build size analysis
        run: |
          echo "📊 Build size analysis:"
          echo "Dist folder size:"
          du -sh dist/ || echo "No dist folder"
          echo ""
          echo "Individual file sizes:"
          ls -lah dist/ || echo "No dist files"
          echo ""
          echo "Package size preview:"
          bun run publish:check

  summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [test, security, compatibility]
    if: always()
    
    steps:
      - name: 📊 Results summary
        run: |
          echo "📋 CI Pipeline Summary"
          echo "====================="
          echo ""
          echo "🧪 Tests: ${{ needs.test.result }}"
          echo "🔒 Security: ${{ needs.security.result }}"
          echo "🔄 Compatibility: ${{ needs.compatibility.result }}"
          echo ""
          
          if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.compatibility.result }}" == "success" ]; then
            echo "✅ All critical checks passed!"
            echo "🚀 Ready for deployment"
          else
            echo "❌ Some checks failed"
            echo "🔍 Please review the logs above"
          fi
          
          echo ""
          echo "📦 Package: @modular-cms/api"
          echo "🌐 Repository: https://github.com/Lukseh/modular-api"
